apply plugin: 'com.android.library'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'

android {
  compileSdkVersion 30

  defaultConfig {
    minSdkVersion 16
    targetSdkVersion 30

    vectorDrawables.useSupportLibrary = true
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }

  buildFeatures {
    buildConfig = false
  }
}

dependencies {
  api deps.recyclerview

  implementation deps.appcompat
  implementation deps.browser
  implementation deps.constraint
  implementation deps.lifecycle
}

task sourcesJar(type: Jar) {
  from android.sourceSets.main.java.srcDirs
  archiveClassifier.set( 'sources')
}

task javadoc(type: Javadoc) {
  source += android.sourceSets.main.java.srcDirs
  classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
  failOnError false
}

task javadocJar(type: Jar, dependsOn: javadoc) {
  archiveClassifier.set('javadoc')
  from javadoc.destinationDir
}

artifacts {
  archives javadocJar
  archives sourcesJar
}

def pomConfig = {
  licenses {
    license {
      name "The Apache Software License, Version 2.0"
      url "http://www.apache.org/licenses/LICENSE-2.0.txt"
      distribution "repo"
    }
  }
  developers {
    developer {
      id "yshrsmz"
      name "Yasuhiro Shimizu"
      email "the.phantom.bane@gmail.com"
    }
  }
  scm {
    url metadata.repository
  }
}

publishing {
  def metadata = project.rootProject.ext.metadata

  publications {
    release(MavenPublication) {
      artifact sourcesJar
      artifact javadocJar
      artifact "$buildDir/outputs/aar/library-release.aar"
      groupId metadata.groupId
      artifactId metadata.artifactId
      version metadata.version

      pom.withXml {
        def root = asNode()

        root.appendNode('description', metadata.description)
        root.appendNode('name', metadata.name)
        root.appendNode('url', metadata.website)
        root.children().last() + pomConfig

        def dependenciesNode = root.appendNode('dependencies')
        // Iterate over the compile dependencies, adding a <dependency> node for each
        configurations.implementation.allDependencies.each {
          if (it.group != null && it.name != null && it.version != null) {
            def dependencyNode = dependenciesNode.appendNode('dependency')
            dependencyNode.appendNode('groupId', it.group)
            dependencyNode.appendNode('artifactId', it.name)
            dependencyNode.appendNode('version', it.version)
          }
        }
      }
    }
  }
}

bintray {
  def metadata = project.rootProject.ext.metadata

  publications 'release'
  user bintrayUser
  key bintrayKey
  dryRun = dryRun
  publish = true

  pkg {
    repo = 'maven'
    userOrg = metadata.userOrg
    name = metadata.artifactId
    vcsUrl = metadata.repository
    licenses = metadata.licenses
    version {
      name = metadata.version
      desc = metadata.description
    }
  }
}

javadoc {
  options.charSet = 'UTF-8'
  options.encoding = 'UTF-8'
  options.locale = 'en_US'
}

project.ext.publicationName = "release"
apply from: rootProject.file('gradle/release.gradle')
